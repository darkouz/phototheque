security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_provider:
          entity:
              class: App\Entity\User
              property: email
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN: ['ROLE_USER', 'ROLE_ALLOWED_TO_SWITCH']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            anonymous: true
            provider: user_provider
            form_login:
                login_path: login
                check_path: login
            logout:
                path: /logout
                target: homepage
    access_control:
        #- {path: ^/homepage, role: ROLE_USER}
        #- {path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY}
        # require ROLE_ADMIN for /admin*
         - { path: ^/admin, roles: ROLE_ADMIN }

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    #access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
